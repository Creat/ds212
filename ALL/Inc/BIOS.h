/********************* (C) COPYRIGHT 2017 e-Design Co.,Ltd. ********************
 Brief   : 底层硬件配置                                          Author : bure
*******************************************************************************/
#ifndef __BIOS_H
#define __BIOS_H

#include "STM32F30x.h"

extern u16 AutoPwr_Cnt,AutoPwr_Cnt,PwrCnt,PD_Cnt,RunCnt, BeepCnt;
extern u16 Key_Wait_Cnt,Key_Repeat_Cnt;
extern u8  NumStr[20];


enum{LOW = 0, HIGH = 1, ANALOG = 2, PULSED = 4, SIMULTANEO = 5, INTERLEAVE = 6,};


// 函数 u32 Info(u8 Item) 中 Item 的定义以及返回值类型说明
//=====+========+========+========+========+========+========+========+========+
//Item:|产品型号|硬件版本| MCU型号| LCD型号| LCD型号|FPGA型号| DFU版本| OEM版本|
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
// RET:|   u8*  |   u8*  |   u8*  |   u8*  |   u8*  |   u8*  |   u8*  |   u8*  |
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
enum   {  PROD,     SCH,     MCU,     LCD,     ADC,    FPGA,     DFU,     OEM,
//=====+========+========+========+========+========+========+========+========+
//Item:| U盘容量|扇区大小|扇区数目|产品串号|授权许可|电源状态|输入电压|输入电流|
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
// RET:|   u8*  |   u16  |   u16  |   u32  |   u8   |   u16  | u16 mV | u16 mA |
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
          DISK,   SECTOR,  AMOUNT,  DEV_SN,  LIC_OK,  P_INFO,  P_VUSB,  P_IUSB,
//=====+========+========+========+========+========+========+========+========+
//Item:|电源温度|电池电压|充电电流|放电电流|供电电压|充电电量|放电电量|正弦波表|
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
// RET:|  u8 C  | u16 mV | u16 mA | u16 mA | u16 mV |   u32  |   u32  |   u16* |
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
         P_TEMP,  P_VBAT,  P_ICHG,  P_IBAT,  P_VAPS,  P_QNT1,  P_QNT2, SIN_TAB, 
//=====+========+========+========+========+========+========+========+========+
//Item:|三角波表|锯齿波表|采样计数|采样计数|输入按键|水平编码|垂直编码|
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
// RET:|   u16* |   u16* |   u16  |   u16  |   u8   |   u16  |   u16  |
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
        TRG_TAB, SAW_TAB, CHA_CNT, CHB_CNT,  KEY_IN,  H_ENCD , V_ENCD };
//=====+========+========+========+========+========+========+========+========+





// 函数 void Ctrl(u8 Item, u32 Val) 中 Item 的定义以及 Val 类型说明
//=====+========+========+========+========+========+========+========+========+
//Item:|系统配置| LCD清屏| LCD方向|毫秒延时|中断定时|讯响状态|讯响音量|背光亮度|
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
// Val:|   u8   |  Color |   0~3  |   mS   |   mS   |   0/1  |  0~99  |  0~99  |
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
enum   {SYS_CFG, LCD_CLR, LCD_DIR, DELAYmS, SYS_INT, BUZZ_ST, BUZZVOL, B_LIGHT,    
//=====+========+========+========+========+========+========+========+========+
//Item:|输出模式|脉冲分频|脉冲周期|脉冲宽度|模拟定时|模拟点数|模拟数据|模拟电平|
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
// Val:|   0~2  |   u16  |   u16  |   u16  |  0~99  |   u16  |  u16*  |   u16  |
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
        OUT_MOD, OUT_PSC, OUT_ARR, OUT_WTH, DAC_TIM, OUT_CNT, OUT_BUF, OUT_VAN, 
//=====+========+========+========+========+========+========+========+========+
//Item:|电源使能| DC1电源| LDO电源|电源信号|采样状态|采样定时|采样缓冲|采样总数|
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
// Val:|   0~1  |   u8   |   u8   |   u8   |   0~1  |   u16  |  u16*  |   u16  |
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
         PM_EN,   PM_VDC1, PM_LDO, PM_CTRL, SMPL_ST, SMPLTIM, SMPLBUF, SMPLNUM, 
//=====+========+========+========+========+========+========+========+========+
//Item:| CHA量程| CHB量程| CHA偏移| CHA偏移|采样模式|电压开关|
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
// Val:|   0~1  |   u8   | 0~4095 | 0~4095 |  0~1   |   0~1  |
//-----+--------+--------+--------+--------+--------+--------+--------+--------+
        AiRANGE, BiRANGE, AOFFSET, BOFFSET,SMPL_MODE,PWROFF};
//=====+========+========+========+========+========+========+========+========+


// 函数 void Ctrl(SYS_CFG, Val) 中  Val 定义的设备类型说明
//=====+=================+=================+=================+=================+
// Val:|   RCC 初始化    |  Timers 初始化  |   GPIO & OpAmp  |   TouchPad IRQ  |
//-----+-----------------+-----------------+-----------------+-----------------+
enum   {  RCC_DEV = 0x01,   TIM_DEV = 0x02,  GPIO_OPA = 0x04,   CTP_DEV = 0x08,
//-----+-----------------+-----------------+-----------------+-----------------+
//     |    I2C 初始化   |  ADC DAC 初始化 |    LCD 初始化   |    MSD 初始化   |
//-----+-----------------+-----------------+-----------------+-----------------+
            SPI = 0x10,   ADC_DAC = 0x20,   LCD_DEV = 0x40,  USB_DISK = 0x80,};
//=====+=================+=================+=================+=================+


// 函数 void Ctrl(AiRANGE/BiRANGE, AC+LV+ACT) 中 Val 定义的通道特性说明
//======+======================+=======================+=======================+
// Val: |      AC/DC 耦合      |     低压/高压量程     |     接地/激活状态     |
//------+----------------------+-----------------------+-----------------------+
enum    { AC = 0x00, DC = 0x02,  LV = 0x00,  HV = 0x01, GND = 0x00, ACT = 0x04,};
//======+======================+=======================+=======================+

//------------------------------ SCI 相关宏定义 --------------------------------

#define SCI_CLK_HIGH()    GPIOA->BSRR = USB_DN
#define SCI_DIO_HIGH()    GPIOA->BSRR = USB_DP

#define SCI_CLK_LOW()     GPIOA->BRR  = USB_DN
#define SCI_DIO_LOW()     GPIOA->BRR  = USB_DP

#define SCI_DIO_ST        GPIOA->IDR & USB_DP

//----------------------- Ext Flash 控制相关宏定义 -----------------------------

#define ExtFlash_CS_HIGH()  GPIOB->BSRR = SPI_CS
#define ExtFlash_CS_LOW()   GPIOB->BRR  = SPI_CS
#define ExtFlash_RST_HIGH() GPIOD->BSRR = SPI_RST
#define ExtFlash_RST_LOW()  GPIOD->BRR  = SPI_RST


void Ctrl(u8 Device, u32 Value);
u32  __Info(u8 Item);
void __Ctrl(u8 Device, u32 Value);
void __ExtFlashSecWr(u8* pBuf, u32 WrAddr);
void __ExtFlashDataRd(u8* pBuf, u32 RdAddr, u16 Len);
u16  __I2C_Write(u8 DevID, u8 Addr, u8 Data);
u16  __I2C_Read (u8 DevID, u8 Addr, u8* pBuf, u16 n);
void __SetBlock(u16 x1, u16 y1, u16 x2, u16 y2);     // LCD Set Block
void __SetPosi(u16 x0, u16 y0);                      // LCD Set Posision
void __SetPixel(u16 Color);                          // LCD Set Pixel
void __SendPixels(u16* pBuf, u16 n);                 // LCD Send Pixels
u16  __ReadPixel(void);                              // LCD Read Pixel
u16  __Font_8x14(u8 Code, u16 Row);
void __Disp_Logo(u16 x0, u16 y0);
void __Disp_Str(u16 x, u16 y, u16 Color, u8 *s);
u8   __FLASH_Prog(u32 Addr, u16 Data);
void __FLASH_Erase(u32 Addr);
void __Disp_OEM(void);



#endif
/********************************* END OF FILE ********************************/
